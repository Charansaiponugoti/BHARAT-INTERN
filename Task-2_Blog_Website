//HTML (index.html):
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <h1>Blog</h1>
    <div id="posts">
        <!-- Posts will be dynamically added here -->
    </div>
    <a href="/newpost" class="btn">New Post</a>

    <script src="/app.js"></script>
</body>
</html>

//CSS (styles.css):
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 20px;
}

h1 {
    text-align: center;
}

.btn {
    display: block;
    width: 150px;
    margin: 20px auto;
    padding: 10px;
    text-align: center;
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
}

.post {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin-bottom: 10px;
}

.post .title {
    font-weight: bold;
}

.post .content {
    margin-top: 10px;
}


//JavaScript (app.js):
document.addEventListener('DOMContentLoaded', function() {
    fetch('/posts')
        .then(response => response.json())
        .then(posts => {
            const postsContainer = document.getElementById('posts');
            posts.forEach(post => {
                const postDiv = document.createElement('div');
                postDiv.classList.add('post');
                postDiv.innerHTML = `
                    <p class="title">${post.title}</p>
                    <p class="content">${post.content}</p>
                `;
                postsContainer.appendChild(postDiv);
            });
        })
        .catch(error => console.error('Error fetching posts:', error));
});

//Node.js (app.js):
const express = require('express');
const mongoose = require('mongoose');
const Post = require('./models/Post');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.static('public'));
app.use(express.urlencoded({ extended: true }));

mongoose.connect('mongodb://localhost:27017/blogDB', {
    useNewUrlParser: true,
    useUnifiedTopology: true
}).then(() => {
    console.log('Connected to MongoDB');
}).catch(err => {
    console.error('Error connecting to MongoDB:', err);
});

app.get('/', (req, res) => {
    res.sendFile(__dirname + '/index.html');
});

app.get('/posts', (req, res) => {
    Post.find({})
        .then(posts => res.json(posts))
        .catch(err => res.status(400).json('Error: ' + err));
});

app.get('/newpost', (req, res) => {
    res.sendFile(__dirname + '/newpost.html');
});

app.post('/newpost', (req, res) => {
    const { title, content } = req.body;
    const newPost = new Post({ title, content });
    newPost.save()
        .then(() => res.redirect('/'))
        .catch(err => res.status(400).json('Error: ' + err));
});

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});


//MongoDB (models/Post.js):
const mongoose = require('mongoose');

const postSchema = new mongoose.Schema({
    title: { type: String, required: true },
    content: { type: String, required: true }
});

module.exports = mongoose.model('Post', postSchema);





